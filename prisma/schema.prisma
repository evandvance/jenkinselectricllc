// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Technicians {
  id          Int     @id @default(autoincrement())
  firstName   String  @map("first_name")
  lastName    String  @map("last_name")
  phoneNumber String? @map("phone_number")
  bio         String
  isCertified Boolean @default(false) @map("is_certified")
  imageUrl    String  @map("image_url")

  @@unique([firstName, lastName])
  @@index([firstName, lastName])
  @@map("technicians")
}

enum AccessLevel {
  Admin
  None

  @@map("access_level")
}

model Appliances {
  id            Int     @id @default(autoincrement())
  applianceName String  @map("appliance_name")
  price         Float
  modelNumber   String  @map("model_number")
  imageUrl      String  @map("image_url")
  isReserved    Boolean @map("is_reserved")

  @@map("appliances")
}

model Users {
  id          Int         @id @default(autoincrement())
  username    String      @unique
  email       String      @unique
  accessLevel AccessLevel @default(None) @map("access_level")
  password    String

  @@map("users")
}

// model Passwords {
//   id          Int      @id @default(autoincrement())
//   password    String
//   createdDate DateTime @default(now())
//   Users       Users?   @relation(fields: [usersId], references: [id])
//   usersId     Int?

//   @@map("passwords")
// }
